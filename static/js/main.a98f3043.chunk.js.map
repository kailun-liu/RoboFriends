{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","components/reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","Cardlist","robots","map","user","i","SearchBox","searchChanged","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onChangeValue","event","serachbox","target","value","fetch","then","response","json","users","filterRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAgBeA,EAbF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAE3B,OACC,sBAAKC,UAAU,uDAAf,UACC,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAA1B,mBACpB,gCACC,oBAAIC,UAAY,KAAhB,SAAsBH,IACtB,4BAAIC,WC8BOK,EArBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAInB,OACE,8BACAA,EAAOC,KAAI,SAACC,EAAMC,GAClB,OACC,cAAC,EAAD,CAEAR,GAAMK,EAAOG,GAAGR,GAChBF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHXS,SCZKC,G,MAbG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,cACnB,OACC,qBAAKT,UAAU,MAAf,SACC,uBACAA,UAAU,gCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,QCIEI,EARA,SAACC,GACf,OACC,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACEJ,EAAMK,YCaKC,E,kDAnBd,WAAYN,GAAQ,IAAD,8BAClB,cAAMA,IACDO,MAAQ,CAEZC,UAAU,GAJO,E,8DAODC,EAAOC,GACxBC,KAAKC,SAAS,CAACJ,UAAU,M,+BAGzB,OAAIG,KAAKJ,MAAMC,SAEP,yDAEDG,KAAKX,MAAMK,a,GAhBQQ,aCiDbC,E,kDA1Cb,aAAgB,IAAD,8BACb,gBAeFC,cAAc,SAACC,GACb,EAAKJ,SAAS,CAACK,UAAWD,EAAME,OAAOC,SAfvC,EAAKZ,MAAO,CACVjB,OAAQ,GACR2B,UAAW,IAJA,E,gEAOK,IAAD,OACjBG,MAAM,8CACLC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACL,OAAO,EAAKZ,SAAS,CAACtB,OAAQkC,S,+BAQxB,IAAD,EACqBb,KAAKJ,MAA1BjB,EADA,EACAA,OAAQ2B,EADR,EACQA,UACTQ,EAAenC,EAAOoC,QAAO,SAAAC,GACjC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASZ,EAAUW,kBAErD,OAAStC,EAAOwC,OAEhB,sBAAK5C,UAAU,KAAf,UACE,oBAAIA,UAAY,KAAhB,yBACA,cAAC,EAAD,CAAWS,cAAiBgB,KAAKI,cAAeE,UAAWN,KAAKJ,MAAMU,YACtE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAU3B,OAASmC,WAPA,6C,GA3BXZ,aCIHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,EAAD,MAEAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a98f3043.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Card = ({name, email, id}) => {\r\n\t// const {name, email, id} = props;\r\n\treturn (\r\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 showdow-5'>\r\n\t\t\t<img alt='Robot' src={`https://robohash.org/${id}?size=200x200`}/>\r\n\t\t\t<div>\r\n\t\t\t\t<h2 className = 'f6'>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card'\r\n\r\n// const Cardlist = ({ robots }) => {\r\n// \tconst cardArray = robots.map((user, i)=>{\r\n// \t\treturn (<Card \r\n// \t\tkey= {i} \r\n// \t\tid = {robots[i].id} \r\n// \t\tname={robots[i].name} \r\n// \t\temail={robots[i].email}/>\r\n// \t\t)\r\n// \t})\r\n// \treturn (\r\n// \t  <div>\r\n// \t\t  {cardArray}\r\n// \t  </div>\r\n// \t\t);\r\n// }\r\n\r\nconst Cardlist = ({ robots }) => {\r\n\t// if (true) {\r\n\t// \tthrow new Error(\"NOoooooo\")\r\n\t// }\r\n\treturn (\r\n\t  <div>\r\n\t\t{robots.map((user, i)=>{\r\n\t\t\treturn (\r\n\t\t\t\t<Card \r\n\t\t\t\tkey= {i} \r\n\t\t\t\tid = {robots[i].id} \r\n\t\t\t\tname={robots[i].name} \r\n\t\t\t\temail={robots[i].email}/>\r\n\t\t\t)\r\n\t\t})\r\n\t\t}\r\n\t  </div>\r\n\t\t);\r\n}\r\n\r\n\r\nexport default Cardlist;","import React from 'react';\r\n\r\n\r\nconst SearchBox = ({searchChanged})=>{\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t\t<input\r\n\t\t\tclassName='pa3 ba b--green bg-light-blue' \r\n\t\t\ttype='search' \r\n\t\t\tplaceholder='search robots'\r\n\t\t\tonChange={searchChanged}/>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\n// props\r\n// state\r\n// children\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style={{overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\tcomponentDidCatch(error, info) {\r\n\t\tthis.setState({hasError: true})\r\n\t}\r\n\trender() {\r\n\t\tif (this.state.hasError) {\r\n\r\n\t\t\treturn <h1>Oppps Thats is not good</h1>\r\n\t\t}\r\n\t\treturn this.props.children \r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary\r\n\r\n\r\n\r\n","import React, {Component} from 'react';\nimport Cardlist from '../components/Cardlist';\n// import {robots} from './robots';\n// import logo from './logo.svg';\nimport './App.css';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\nclass App extends Component {\n  constructor () {\n    super()\n    this.state= {\n      robots: [],\n      serachbox: ''\n    }\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then((response)=>{\n      return response.json();\n    })\n    .then((users)=>{\n      return this.setState({robots: users})\n    })\n  }\n  onChangeValue=(event)=>{\n    this.setState({serachbox: event.target.value})\n    }\n    \n  \n  render() {\n    const {robots, serachbox} = this.state\n    const filterRobots = robots.filter(robot=>{\n      return robot.name.toLowerCase().includes(serachbox.toLowerCase());\n    })\n    return (!robots.length)? <h1>Loading</h1>:\n    (\n    <div className='tc'>\n      <h1 className = 'f2'>RoboFriends</h1>\n      <SearchBox searchChanged = {this.onChangeValue} serachbox={this.state.serachbox}/>\n      <Scroll>\n        <ErrorBoundary>\n          <Cardlist robots= {filterRobots}/>\n        </ErrorBoundary>\n      </Scroll>\n    </div>\n    );\n    \n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './components/reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n  <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}